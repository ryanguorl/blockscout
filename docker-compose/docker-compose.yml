version: '3.9'

services:
  redis-db:
    extends:
      file: ./services/redis.yml
      service: redis-db

  db-init:
    extends:
      file: ./services/db.yml
      service: db-init

  db:
    depends_on:
      db-init:
        condition: service_completed_successfully
    extends:
      file: ./services/db.yml
      service: db

  backend:
    depends_on:
      - db
      - redis-db
    extends:
      file: ./services/backend.yml
      service: backend
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
      args:
        CACHE_EXCHANGE_RATES_PERIOD: ""
        API_V1_READ_METHODS_DISABLED: "false"
        DISABLE_WEBAPP: "false"
        API_V1_WRITE_METHODS_DISABLED: "false"
        CACHE_TOTAL_GAS_USAGE_COUNTER_ENABLED: ""
        CACHE_ADDRESS_WITH_BALANCES_UPDATE_INTERVAL: ""
        ADMIN_PANEL_ENABLED: ""
        RELEASE_VERSION: 6.6.0
    links:
      - db:database

  visualizer:
    extends:
      file: ./services/visualizer.yml
      service: visualizer

  sig-provider:
    extends:
      file: ./services/sig-provider.yml
      service: sig-provider

  frontend:
    depends_on:
      - backend
    extends:
      file: ./services/frontend.yml
      service: frontend

  stats-db-init:
    extends:
      file: ./services/stats.yml
      service: stats-db-init

  stats-db:
    depends_on:
      stats-db-init:
        condition: service_completed_successfully
    extends:
      file: ./services/stats.yml
      service: stats-db

  stats:
    depends_on:
      - stats-db
      - backend
    extends:
      file: ./services/stats.yml
      service: stats

  user-ops-indexer:
    depends_on:
      - db
      - backend
    extends:
      file: ./services/user-ops-indexer.yml
      service: user-ops-indexer

  proxy:
    depends_on:
      - backend
      - frontend
      - stats
    extends:
      file: ./services/nginx.yml
      service: proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.blockscout.rule=Host(`scan.pandorachain.org`)
      - traefik.http.routers.blockscout.entrypoints=web-secure
      - traefik.http.routers.blockscout.tls=true
      - traefik.http.routers.blockscout.tls.certresolver=letsencrypt-tls
      - traefik.http.services.blockscout.loadbalancer.server.port=80
      # Stats Router and Service
      - traefik.http.routers.stats.rule=Host(`scan.pandorachain.org`) && PathPrefix(/api/v1/lines, /api/v1/counters)
      - traefik.http.routers.stats.entrypoints=web-secure
      - traefik.http.routers.stats.tls=true
      - traefik.http.routers.stats.service=stats-service
      - traefik.http.services.stats-service.loadbalancer.server.port=8080
      # Visualizer Router and Service
      - traefik.http.routers.visualizer.rule=Host(`scan.pandorachain.org`) && PathPrefix(`/visualizer`)
      - traefik.http.routers.visualizer.entrypoints=web-secure
      - traefik.http.routers.visualizer.tls=true
      - traefik.http.routers.visualizer.service=visualizer-service
      - traefik.http.services.visualizer-service.loadbalancer.server.port=8081
      # CORS Middleware for Stats
      - traefik.http.middlewares.stats-cors.headers.accessControlAllowOriginList=*
      - traefik.http.routers.stats.middlewares=stats-cors
      # CORS Middleware for Visualizer
      - traefik.http.middlewares.visualizer-cors.headers.accessControlAllowOriginList=*
      - traefik.http.routers.visualizer.middlewares=visualizer-cors
